package com.blog.services.impl;

import java.sql.Date;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.blog.entities.Categori;
import com.blog.entities.Post;
import com.blog.entities.User;
import com.blog.exceptions.ResourceNotFoundException;
import com.blog.payloads.PostDto;
import com.blog.repositories.CategoriRepo;
import com.blog.repositories.PostRepo;
import com.blog.repositories.UserRepo;
import com.blog.services.PostService;
@Service
public class PostServiceImpl implements PostService {
	@Autowired
	private PostRepo postRepo;
	@Autowired
	private ModelMapper modelMapper;
	@Autowired
	private UserRepo userRepo;
	@Autowired
	private CategoriRepo categoriRepo;
	@Override
	public PostDto createPost(PostDto postDto, Integer u_id, Integer categoriId) {
		User user= this.userRepo.findById(u_id).orElseThrow(() ->new ResourceNotFoundException("User", "userId", u_id));
		Categori categori= this.categoriRepo.findById(categoriId).orElseThrow(() ->new ResourceNotFoundException("categori", "categoriId", categoriId));
		Post post= this.modelMapper.map(postDto, Post.class);
		post.setImageName("default.png");
		LocalDateTime now = LocalDateTime.now();
	    Date date = new Date(Date.from(now.atZone(ZoneId.systemDefault()).toInstant()).getTime());
	    post.setAddedDate(date);
		post.setUser(user);
		post.setCategori(categori);
		Post newPost= this.postRepo.save(post);
		//System.out.println(this.modelMapper.map(newPost, PostDto.class));
		return this.modelMapper.map(newPost, PostDto.class);
	}

	@Override
	public PostDto updatePost(PostDto postDto, Integer postId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deletePost(Integer postId) {
		// TODO Auto-generated method stub

	}

	@Override
	public PostDto getPostById(Integer postId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<PostDto> getAllPost() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<PostDto> getAllPostByCategori(Integer categoriId) 
	{
		
		Categori cat= this.categoriRepo.findById(categoriId).orElseThrow(()->new ResourceNotFoundException("Categori", "Categori id", categoriId));
		List<Post> posts= postRepo.findByCategori(cat);
		
		for(Post t: posts) {
			System.out.println(t.getTitle());
		}
		
		//List<PostDto> postDto= posts.stream().map((post)->this.modelMapper.map(posts, PostDto.class)).collect(Collectors.toList());
		List<PostDto> postDto = posts.stream()
                .map(post -> modelMapper.map(post, PostDto.class))
                .collect(Collectors.toList());

		
		
		return postDto;
	}

	@Override
	public List<PostDto> getAllPostByUser(Integer u_id) {
		User user= this.userRepo.findById(u_id).orElseThrow(()->new ResourceNotFoundException("User", "User Id", u_id));
		List<Post> posts= this.postRepo.findByUser(user);
		List<PostDto> postDtos= posts.stream().map((post) ->this.modelMapper.map(posts, PostDto.class)).collect(Collectors.toList());
		return postDtos;
	}

	@Override
	public List<Post> searchPost(String keyword) {
		// TODO Auto-generated method stub
		return null;
	}

}
